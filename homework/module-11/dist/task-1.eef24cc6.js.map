{"version":3,"sources":["task-2/task-2-1/task-1.js"],"names":["console","log","delay","ms","Promise","resolve","setTimeout","logger","time","then"],"mappings":"AAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,EAAE,EAAI;AACf,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC7BC,IAAAA,UAAU,CAAC,YAAM;AACbD,MAAAA,OAAO,CAACF,EAAD,CAAP;AACH,KAFS,EAEPA,EAFO,CAAV;AAIH,GALO,CAAP;AAOF,CARH;;AAUE,IAAMI,MAAM,GAAG,SAATA,MAAS,CAAAC,IAAI;AAAA,SAAIR,OAAO,CAACC,GAAR,0BAA8BO,IAA9B,EAAJ;AAAA,CAAnB,EAEA;;;AACAN,KAAK,CAAC,IAAD,CAAL,CAAYO,IAAZ,CAAiBF,MAAjB,GAA0B;;AAC1BL,KAAK,CAAC,IAAD,CAAL,CAAYO,IAAZ,CAAiBF,MAAjB,GAA0B;;AAC1BL,KAAK,CAAC,IAAD,CAAL,CAAYO,IAAZ,CAAiBF,MAAjB,GAA0B","file":"task-1.eef24cc6.js","sourceRoot":"..","sourcesContent":["console.log(\"Task 1\");\r\nconst delay = ms => {\r\n     return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            resolve(ms);\r\n        }, ms);\r\n        \r\n    });\r\n    \r\n  };\r\n  \r\n  const logger = time => console.log(`Resolved after ${time}`);\r\n  \r\n  // Виклич функції для перевірки\r\n  delay(2000).then(logger); // Resolved after 2000ms\r\n  delay(1000).then(logger); // Resolved after 1000ms\r\n  delay(1500).then(logger); // Resolved after 1500ms\r\n  "]}